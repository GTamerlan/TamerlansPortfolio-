{
  "version": 3,
  "sources": ["../../three/examples/jsm/csm/CSMHelper.js"],
  "sourcesContent": ["import {\r\n\tGroup,\r\n\tMesh,\r\n\tLineSegments,\r\n\tBufferGeometry,\r\n\tLineBasicMaterial,\r\n\tBox3Helper,\r\n\tBox3,\r\n\tPlaneGeometry,\r\n\tMeshBasicMaterial,\r\n\tBufferAttribute,\r\n\tDoubleSide\r\n} from 'three';\r\n\r\nclass CSMHelper extends Group {\r\n\r\n\tconstructor( csm ) {\r\n\r\n\t\tsuper();\r\n\t\tthis.csm = csm;\r\n\t\tthis.displayFrustum = true;\r\n\t\tthis.displayPlanes = true;\r\n\t\tthis.displayShadowBounds = true;\r\n\r\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\r\n\t\tconst positions = new Float32Array( 24 );\r\n\t\tconst frustumGeometry = new BufferGeometry();\r\n\t\tfrustumGeometry.setIndex( new BufferAttribute( indices, 1 ) );\r\n\t\tfrustumGeometry.setAttribute( 'position', new BufferAttribute( positions, 3, false ) );\r\n\t\tconst frustumLines = new LineSegments( frustumGeometry, new LineBasicMaterial() );\r\n\t\tthis.add( frustumLines );\r\n\r\n\t\tthis.frustumLines = frustumLines;\r\n\t\tthis.cascadeLines = [];\r\n\t\tthis.cascadePlanes = [];\r\n\t\tthis.shadowLines = [];\r\n\r\n\t}\r\n\r\n\tupdateVisibility() {\r\n\r\n\t\tconst displayFrustum = this.displayFrustum;\r\n\t\tconst displayPlanes = this.displayPlanes;\r\n\t\tconst displayShadowBounds = this.displayShadowBounds;\r\n\r\n\t\tconst frustumLines = this.frustumLines;\r\n\t\tconst cascadeLines = this.cascadeLines;\r\n\t\tconst cascadePlanes = this.cascadePlanes;\r\n\t\tconst shadowLines = this.shadowLines;\r\n\t\tfor ( let i = 0, l = cascadeLines.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst cascadeLine = cascadeLines[ i ];\r\n\t\t\tconst cascadePlane = cascadePlanes[ i ];\r\n\t\t\tconst shadowLineGroup = shadowLines[ i ];\r\n\r\n\t\t\tcascadeLine.visible = displayFrustum;\r\n\t\t\tcascadePlane.visible = displayFrustum && displayPlanes;\r\n\t\t\tshadowLineGroup.visible = displayShadowBounds;\r\n\r\n\t\t}\r\n\r\n\t\tfrustumLines.visible = displayFrustum;\r\n\r\n\t}\r\n\r\n\tupdate() {\r\n\r\n\t\tconst csm = this.csm;\r\n\t\tconst camera = csm.camera;\r\n\t\tconst cascades = csm.cascades;\r\n\t\tconst mainFrustum = csm.mainFrustum;\r\n\t\tconst frustums = csm.frustums;\r\n\t\tconst lights = csm.lights;\r\n\r\n\t\tconst frustumLines = this.frustumLines;\r\n\t\tconst frustumLinePositions = frustumLines.geometry.getAttribute( 'position' );\r\n\t\tconst cascadeLines = this.cascadeLines;\r\n\t\tconst cascadePlanes = this.cascadePlanes;\r\n\t\tconst shadowLines = this.shadowLines;\r\n\r\n\t\tthis.position.copy( camera.position );\r\n\t\tthis.quaternion.copy( camera.quaternion );\r\n\t\tthis.scale.copy( camera.scale );\r\n\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\twhile ( cascadeLines.length > cascades ) {\r\n\r\n\t\t\tthis.remove( cascadeLines.pop() );\r\n\t\t\tthis.remove( cascadePlanes.pop() );\r\n\t\t\tthis.remove( shadowLines.pop() );\r\n\r\n\t\t}\r\n\r\n\t\twhile ( cascadeLines.length < cascades ) {\r\n\r\n\t\t\tconst cascadeLine = new Box3Helper( new Box3(), 0xffffff );\r\n\t\t\tconst planeMat = new MeshBasicMaterial( { transparent: true, opacity: 0.1, depthWrite: false, side: DoubleSide } );\r\n\t\t\tconst cascadePlane = new Mesh( new PlaneGeometry(), planeMat );\r\n\t\t\tconst shadowLineGroup = new Group();\r\n\t\t\tconst shadowLine = new Box3Helper( new Box3(), 0xffff00 );\r\n\t\t\tshadowLineGroup.add( shadowLine );\r\n\r\n\t\t\tthis.add( cascadeLine );\r\n\t\t\tthis.add( cascadePlane );\r\n\t\t\tthis.add( shadowLineGroup );\r\n\r\n\t\t\tcascadeLines.push( cascadeLine );\r\n\t\t\tcascadePlanes.push( cascadePlane );\r\n\t\t\tshadowLines.push( shadowLineGroup );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( let i = 0; i < cascades; i ++ ) {\r\n\r\n\t\t\tconst frustum = frustums[ i ];\r\n\t\t\tconst light = lights[ i ];\r\n\t\t\tconst shadowCam = light.shadow.camera;\r\n\t\t\tconst farVerts = frustum.vertices.far;\r\n\r\n\t\t\tconst cascadeLine = cascadeLines[ i ];\r\n\t\t\tconst cascadePlane = cascadePlanes[ i ];\r\n\t\t\tconst shadowLineGroup = shadowLines[ i ];\r\n\t\t\tconst shadowLine = shadowLineGroup.children[ 0 ];\r\n\r\n\t\t\tcascadeLine.box.min.copy( farVerts[ 2 ] );\r\n\t\t\tcascadeLine.box.max.copy( farVerts[ 0 ] );\r\n\t\t\tcascadeLine.box.max.z += 1e-4;\r\n\r\n\t\t\tcascadePlane.position.addVectors( farVerts[ 0 ], farVerts[ 2 ] );\r\n\t\t\tcascadePlane.position.multiplyScalar( 0.5 );\r\n\t\t\tcascadePlane.scale.subVectors( farVerts[ 0 ], farVerts[ 2 ] );\r\n\t\t\tcascadePlane.scale.z = 1e-4;\r\n\r\n\t\t\tthis.remove( shadowLineGroup );\r\n\t\t\tshadowLineGroup.position.copy( shadowCam.position );\r\n\t\t\tshadowLineGroup.quaternion.copy( shadowCam.quaternion );\r\n\t\t\tshadowLineGroup.scale.copy( shadowCam.scale );\r\n\t\t\tshadowLineGroup.updateMatrixWorld( true );\r\n\t\t\tthis.attach( shadowLineGroup );\r\n\r\n\t\t\tshadowLine.box.min.set( shadowCam.bottom, shadowCam.left, - shadowCam.far );\r\n\t\t\tshadowLine.box.max.set( shadowCam.top, shadowCam.right, - shadowCam.near );\r\n\r\n\t\t}\r\n\r\n\t\tconst nearVerts = mainFrustum.vertices.near;\r\n\t\tconst farVerts = mainFrustum.vertices.far;\r\n\t\tfrustumLinePositions.setXYZ( 0, farVerts[ 0 ].x, farVerts[ 0 ].y, farVerts[ 0 ].z );\r\n\t\tfrustumLinePositions.setXYZ( 1, farVerts[ 3 ].x, farVerts[ 3 ].y, farVerts[ 3 ].z );\r\n\t\tfrustumLinePositions.setXYZ( 2, farVerts[ 2 ].x, farVerts[ 2 ].y, farVerts[ 2 ].z );\r\n\t\tfrustumLinePositions.setXYZ( 3, farVerts[ 1 ].x, farVerts[ 1 ].y, farVerts[ 1 ].z );\r\n\r\n\t\tfrustumLinePositions.setXYZ( 4, nearVerts[ 0 ].x, nearVerts[ 0 ].y, nearVerts[ 0 ].z );\r\n\t\tfrustumLinePositions.setXYZ( 5, nearVerts[ 3 ].x, nearVerts[ 3 ].y, nearVerts[ 3 ].z );\r\n\t\tfrustumLinePositions.setXYZ( 6, nearVerts[ 2 ].x, nearVerts[ 2 ].y, nearVerts[ 2 ].z );\r\n\t\tfrustumLinePositions.setXYZ( 7, nearVerts[ 1 ].x, nearVerts[ 1 ].y, nearVerts[ 1 ].z );\r\n\t\tfrustumLinePositions.needsUpdate = true;\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tconst frustumLines = this.frustumLines;\r\n\t\tconst cascadeLines = this.cascadeLines;\r\n\t\tconst cascadePlanes = this.cascadePlanes;\r\n\t\tconst shadowLines = this.shadowLines;\r\n\r\n\t\tfrustumLines.geometry.dispose();\r\n\t\tfrustumLines.material.dispose();\r\n\r\n\t\tconst cascades = this.csm.cascades;\r\n\r\n\t\tfor ( let i = 0; i < cascades; i ++ ) {\r\n\r\n\t\t\tconst cascadeLine = cascadeLines[ i ];\r\n\t\t\tconst cascadePlane = cascadePlanes[ i ];\r\n\t\t\tconst shadowLineGroup = shadowLines[ i ];\r\n\t\t\tconst shadowLine = shadowLineGroup.children[ 0 ];\r\n\r\n\t\t\tcascadeLine.dispose(); // Box3Helper\r\n\r\n\t\t\tcascadePlane.geometry.dispose();\r\n\t\t\tcascadePlane.material.dispose();\r\n\r\n\t\t\tshadowLine.dispose(); // Box3Helper\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { CSMHelper };\r\n"],
  "mappings": "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",
  "names": ["farVerts"]
}
